// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni vendor crd -f https://github.com/cert-manager/cert-manager/releases/download/v1.17.0/cert-manager.yaml

package v1

import "strings"

// Order is a type to represent an Order with an ACME server
#Order: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "acme.cert-manager.io/v1"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "Order"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}
	spec!: #OrderSpec
}
#OrderSpec: {
	// CommonName is the common name as specified on the DER encoded
	// CSR.
	// If specified, this value must also be present in `dnsNames` or
	// `ipAddresses`.
	// This field must match the corresponding field on the DER
	// encoded CSR.
	commonName?: string

	// DNSNames is a list of DNS names that should be included as part
	// of the Order
	// validation process.
	// This field must match the corresponding field on the DER
	// encoded CSR.
	dnsNames?: [...string]

	// Duration is the duration for the not after date for the
	// requested certificate.
	// this is set on order creation as pe the ACME spec.
	duration?: string

	// IPAddresses is a list of IP addresses that should be included
	// as part of the Order
	// validation process.
	// This field must match the corresponding field on the DER
	// encoded CSR.
	ipAddresses?: [...string]

	// IssuerRef references a properly configured ACME-type Issuer
	// which should
	// be used to create this Order.
	// If the Issuer does not exist, processing will be retried.
	// If the Issuer is not an 'ACME' Issuer, an error will be
	// returned and the
	// Order will be marked as failed.
	issuerRef!: {
		// Group of the resource being referred to.
		group?: string

		// Kind of the resource being referred to.
		kind?: string

		// Name of the resource being referred to.
		name!: string
	}

	// Certificate signing request bytes in DER encoding.
	// This will be used when finalizing the order.
	// This field must be set on the order.
	request!: string
}
