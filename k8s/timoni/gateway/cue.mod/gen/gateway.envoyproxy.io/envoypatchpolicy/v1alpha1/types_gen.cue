// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni vendor crd -f https://github.com/envoyproxy/gateway/releases/download/v1.3.0/install.yaml

package v1alpha1

import "strings"

// EnvoyPatchPolicy allows the user to modify the generated Envoy
// xDS
// resources by Envoy Gateway using this patch API
#EnvoyPatchPolicy: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "gateway.envoyproxy.io/v1alpha1"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "EnvoyPatchPolicy"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// Spec defines the desired state of EnvoyPatchPolicy.
	spec!: #EnvoyPatchPolicySpec
}

// Spec defines the desired state of EnvoyPatchPolicy.
#EnvoyPatchPolicySpec: {
	// JSONPatch defines the JSONPatch configuration.
	jsonPatches?: [...{
		// Name is the name of the resource
		name!: string

		// Patch defines the JSON Patch Operation
		operation!: {
			// From is the source location of the value to be copied or moved.
			// Only valid
			// for move or copy operations
			// Refer to https://datatracker.ietf.org/doc/html/rfc6901 for more
			// details.
			from?: string

			// JSONPath is a JSONPath expression. Refer to
			// https://datatracker.ietf.org/doc/rfc9535/ for more details.
			// It produces one or more JSONPointer expressions based on the
			// given JSON document.
			// If no JSONPointer is found, it will result in an error.
			// If the 'Path' property is also set, it will be appended to the
			// resulting JSONPointer expressions from the JSONPath
			// evaluation.
			// This is useful when creating a property that does not yet exist
			// in the JSON document.
			// The final JSONPointer expressions specifies the locations in
			// the target document/field where the operation will be applied.
			jsonPath?: string

			// Op is the type of operation to perform
			op!: "add" | "remove" | "replace" | "move" | "copy" | "test"

			// Path is a JSONPointer expression. Refer to
			// https://datatracker.ietf.org/doc/html/rfc6901 for more
			// details.
			// It specifies the location of the target document/field where
			// the operation will be performed
			path?: string

			// Value is the new value of the path location. The value is only
			// used by
			// the `add` and `replace` operations.
			value?: _
		}

		// Type is the typed URL of the Envoy xDS Resource
		type!: "type.googleapis.com/envoy.config.listener.v3.Listener" | "type.googleapis.com/envoy.config.route.v3.RouteConfiguration" | "type.googleapis.com/envoy.config.cluster.v3.Cluster" | "type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment" | "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret"
	}]

	// Priority of the EnvoyPatchPolicy.
	// If multiple EnvoyPatchPolicies are applied to the same
	// TargetRef, they will be applied in the ascending order of
	// the priority i.e. int32.min has the highest priority and
	// int32.max has the lowest priority.
	// Defaults to 0.
	priority?: int32

	// TargetRef is the name of the Gateway API resource this policy
	// is being attached to.
	// By default, attaching to Gateway is supported and
	// when mergeGateways is enabled it should attach to GatewayClass.
	// This Policy and the TargetRef MUST be in the same namespace
	// for this Policy to have effect and be applied to the Gateway
	// TargetRef
	targetRef!: {
		// Group is the group of the target resource.
		group!: strings.MaxRunes(253) & {
			=~"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
		}

		// Kind is kind of the target resource.
		kind!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			=~"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
		}

		// Name is the name of the target resource.
		name!: strings.MaxRunes(253) & strings.MinRunes(1)
	}

	// Type decides the type of patch.
	// Valid EnvoyPatchType values are "JSONPatch".
	type!: "JSONPatch"
}
