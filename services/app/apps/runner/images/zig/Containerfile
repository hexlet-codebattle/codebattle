ARG RUNNER_IMAGE=ghcr.io/hexlet-codebattle/runner-rs:latest
ARG ZIG_TAG=0.14.1
ARG TARGETPLATFORM

FROM --platform=$TARGETPLATFORM ${RUNNER_IMAGE} AS runner
FROM --platform=$TARGETPLATFORM alpine:3.22

# Ensure build tools if needed (alpine-based Zig images may already have them)
RUN apk add --no-cache build-base zig make

# Create non-root user (same as your other images)
RUN addgroup -S app -g 10001 \
  && adduser -S -D -H -h /nonexistent -s /sbin/nologin -G app -u 10001 app

# --- CRUCIAL PERMS & ENV FOR ZIG ---
# 1) Make stdlib readable by non-root (varies by base image path)
RUN test -d /usr/lib/zig && chmod -R a+rX /usr/lib/zig || true
RUN test -d /usr/local/lib/zig && chmod -R a+rX /usr/local/lib/zig || true
RUN test -d /opt/zig && chmod -R a+rX /opt/zig || true

# 2) Put caches in /tmp and make sure it's writable
ENV ZIG_GLOBAL_CACHE_DIR=/tmp/zig-global \
  ZIG_LOCAL_CACHE_DIR=/tmp/zig-cache
RUN mkdir -p /tmp/zig-global /tmp/zig-cache && chmod -R 777 /tmp/zig-global /tmp/zig-cache

WORKDIR /usr/src/app

# Only the "check" dir is mounted by the runner at runtime
COPY check ./check
COPY Makefile .

# optional: preflight smoke test (will be re-run at runtime anyway)
# RUN zig version

# Ownership for mounted workspace (safe even if overwritten at runtime)
RUN chown -R app:app /usr/src/app

USER app

EXPOSE 8000
COPY --from=runner /app/codebattle_runner /runner/codebattle_runner
ENTRYPOINT ["/runner/codebattle_runner"]
