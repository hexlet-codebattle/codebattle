import solution from './solution';
import { assert } from 'chai';
<%= imports %>
let success: boolean = true;

try {
  const assertEqual = function (result, expected, errorMessage) {
    try {
      assert.deepEqual(result, expected);

      process.stdout.write(`${JSON.stringify({
        status: 'success',
        result,
      })}\n`);
    } catch (err) {
      process.stdout.write(`${JSON.stringify({
        status: 'failure',
        result,
        arguments: errorMessage,
      })}\n`);
      success = false;
    }
  };

  <%= for %{arguments: arguments, expected: expected, index: i} <- checks do %>
    <%= for  %{defining: defining, value: value} <- arguments.info do %>
      const <%= defining %> = <%= value %>;
    <% end %>
    const <%= expected.defining %> = <%= expected.value %>;

    assertEqual(
      solution(<%= arguments.expression %>),
      expected<%= i %>,
      [<%= arguments.expression %>]
    );
  <% end %>

  if (success) {
    process.stdout.write(`${JSON.stringify({
      status: 'ok',
      result: <%= hash_sum %>,
    })}\n`);
  }
  process.exit(0);

} catch (err) {
  process.stdout.write(`${JSON.stringify({
    status: 'failure',
    result: err.message,
  })}\n`);
  process.exit(0);
}
