FROM elixir:1.18.4-otp-27-alpine AS compile-image
ARG GIT_HASH

ENV APP_VERSION=$GIT_HASH
ENV MIX_ENV=prod

WORKDIR /opt/app

RUN apk update && apk add --no-cache build-base git ca-certificates make curl \
  && mix local.hex --force \
  && mix local.rebar --force

COPY mix.exs .
COPY mix.lock .
COPY config ./config
COPY apps/runner/mix.exs apps/runner/mix.exs
COPY apps/phoenix_gon/mix.exs apps/phoenix_gon/mix.exs
COPY apps/codebattle/mix.exs apps/codebattle/mix.exs

RUN mix do deps.get --only prod, deps.compile

COPY ./apps/runner/ ./apps/runner/

RUN mix release runner \
  && mv _build/prod/rel/runner /opt/release

FROM elixir:1.18.4-otp-27-alpine AS runtime-image

ENV DOCKER_CHANNEL stable
ENV DOCKER_VERSION 24.0.9
ENV NERDCTL_VERSION 2.1.3
ENV GOON_VERSION v1.1.1

RUN apk update && apk add --no-cache ca-certificates git make curl vim

RUN curl -fsSL "https://download.docker.com/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz" \
  | tar -xzC /usr/local/bin --strip=1 docker/docker

RUN curl -sL "https://github.com/containerd/nerdctl/releases/download/v${NERDCTL_VERSION}/nerdctl-${NERDCTL_VERSION}-linux-amd64.tar.gz" \
  | tar -xz -C /usr/local/bin/

RUN curl -fsSL "https://github.com/alco/goon/releases/download/${GOON_VERSION}/goon_linux_amd64.tar.gz" \
  | tar -xzC /usr/local/bin

ENV PORT=4001
EXPOSE ${PORT}
WORKDIR /opt/app
COPY --from=compile-image /opt/release .
COPY Makefile Makefile
CMD exec /opt/app/bin/runner start
