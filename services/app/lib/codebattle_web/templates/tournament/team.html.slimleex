- {r1, r2} = calc_team_score(@tournament)
- [%{title: title1}, %{title: title2}] =  get_teams(@tournament)

= render "_header.html", tournament: @tournament, time: @time, current_user: @current_user, socket: @socket

.container-fluid.mt-4
  .row
    .col-3
      .sticky-top.pt-3
        .bg-white.rounded-top.shadow-sm style="height: 350px;"
          .overflow-auto.px-3.pt-3.h-100.text-break phx-hook="NewChatMessage"
            div
              span.text-muted Please, be nice in chat
            = for message <- @messages do
              .pb-1
                span.font-weight-bold = "#{message.user_name}:"
                span.ml-1 = message.message
        = form_for :message, "#", [phx_submit: :chat_message],  fn f ->
          .d-flex.shadow-sm.rounded-bottom
            = text_input f, :content, autocomplete: "off", placeholder: "write your message here...", class: "form-control rounded-0 border-0 border-top x-rounded-bottom-left bg-transparent"
            = submit "Send", class: "btn btn-outline-secondary x-rounded-bottom-right rounded-0"
    .col-9.mt-3
      .row
        .col-12
          .py-2.bg-white.shadow-sm.rounded
            .row.align-items-center
              .col-4
                h3.mb-0.px-3.font-weight-light = title1
              .col-2.text-right
                span.display-4 = r1
              .col-2
                span.display-4 = r2
              .col-4.text-right
                h3.mb-0.px-3.font-weight-light = title2

            .row.px-3.pt-2
              = for %{id: team_id} <- get_teams(@tournament) do
                .col
                  .d-flex.align-items-center
                    = if is_waiting_partisipants?(@tournament) do
                      = if is_participant?(@tournament, @current_user.id, team_id) do
                        button.btn.btn-outline-danger[phx-click="leave"] Leave
                      - else
                        button.btn.btn-outline-info[phx-click="join" phx-value-team_id=team_id] Join

                  = render "_players.html", players: get_team_players(@tournament, team_id)

        .col-12.mt-4
          = for round <- Enum.reverse(get_rounds(@tournament)) do
            = render "_team_round.html", round: round, current_user: @current_user
